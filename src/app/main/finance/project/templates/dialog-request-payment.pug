form.dialog-request-payment.layout-column(
	[formGroup]='requestForm',
	(submit)='create()')
	h1(matDialogTitle)
		| {{ "FINANCE.PROJECT.TITLES.REQUEST_PAYMENT" | translate }}
		| -
		| {{ requestPayment?.po_name || "N/A" }}

	div(matDialogContent)
		.layout-row.layout-wrap.layout-fixer-15
			mat-form-field.mb-10.flex-50.ph-15(
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "GENERAL.LABELS.NAME" | translate }}
				input(
					matInput,
					[(ngModel)]='requestPayment.name',
					[placeholder]='"GENERAL.PLACEHOLDERS.NAME" | translate',
					[formControl]='requestForm?.controls[ "name" ]',
					[disableControl]='isSubmitting',
					required,
					ngDefaultControl)
				mat-error
					error-message(
						[label]='"GENERAL.LABELS.NAME" | translate',
						[control]='requestForm?.controls[ "name" ]')

			select-box.mb-10.ph-15.flex-50(
				[(ngModel)]='ratioPercent',
				[sort]='false',
				(selectionChange)='updateTotal()',
				[label]='"FINANCE.PROJECT.LABELS.RATIO" | translate',
				[placeholder]='"FINANCE.PROJECT.PLACEHOLDERS.RATIO" | translate',
				[formControl]='requestForm?.controls[ "ratio" ]',
				[disableControl]='isSubmitting',
				[data]='RATIO | itemObject: "%"',
				required,
				ngDefaultControl)

			mat-form-field.mb-10.ph-15.flex-50(
				plugin-input-parse-commas,
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "FINANCE.PROJECT.LABELS.TOTAL" | translate }}
				input(
					matInput,
					step='1000',
					min='0',
					type='number',
					[(ngModel)]='sumRequest.total',
					(ngModelChange)='updateTotalVAT()',
					[formControl]='requestForm?.controls[ "total" ]',
					required,
					ngDefaultControl)
				span(matPrefix)
					| {{ ( sumRequest?.total?.toString() || "" ) | commas }}
				mat-hint
					| {{ ( sumRequest?.total?.toString() || "" ) | commas }}
				mat-error
					error-message(
						[label]='"FINANCE.PROJECT.LABELS.TOTAL" | translate',
						[control]='requestForm?.controls[ "total" ]')

			mat-form-field.mb-10.ph-15.flex-50(
				plugin-input-parse-commas,
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "GENERAL.LABELS.VAT" | translate }}
				input(
					matInput,
					step='1000',
					min='0',
					type='number',
					[(ngModel)]='sumRequest.total_vat',
					[formControl]='requestForm?.controls[ "total_vat" ]',
					required,
					ngDefaultControl)
				span(matPrefix)
					| {{ ( sumRequest?.total_vat?.toString() || "" ) | commas }}
				mat-hint
					| {{ ( sumRequest?.total_vat?.toString() || "" ) | commas }}
				mat-error
					error-message(
						[label]='"GENERAL.LABELS.VAT" | translate',
						[control]='requestForm?.controls[ "total_vat" ]')

			mat-form-field.mb-10.ph-15.flex-50(
				plugin-input-parse-commas,
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "FINANCE.PROJECT.LABELS.SUM_WITH_VAT" | translate }}
				input(
					matInput,
					type='number',
					[formControl]='requestForm?.controls[ "sum_with_vat" ]',
					readonly,
					ngDefaultControl)
				span(matPrefix)
					| {{ ( ( sumRequest?.total + sumRequest?.total_vat )?.toString() || "" ) | commas }}

			select-box.mb-10.mb-10.ph-15.flex-50(
				[sort]='false',
				[translated]='true',
				[(ngModel)]='requestPayment.transfer_type',
				[label]='"FINANCE.PROJECT.LABELS.TRANSFER_TYPE" | translate',
				[placeholder]='"FINANCE.PROJECT.PLACEHOLDERS.TRANSFER_TYPE" | translate',
				[formControl]='requestForm?.controls[ "transfer_type" ]',
				[disableControl]='isSubmitting',
				[data]='transferType',
				required,
				ngDefaultControl)

			mat-form-field.mb-10.ph-15.flex-50(
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "FINANCE.PROJECT.LABELS.INVOICE_NUMBER" | translate }}
				input(
					matInput,
					[(ngModel)]='requestPayment.invoice_number',
					[placeholder]='"FINANCE.PROJECT.PLACEHOLDERS.INVOICE_NUMBER" | translate',
					[formControl]='requestForm?.controls[ "invoice_number" ]',
					[disableControl]='isSubmitting || isUploading',
					ngDefaultControl)
				mat-error
					error-message(
						[label]='"FINANCE.PROJECT.LABELS.INVOICE_NUMBER" | translate',
						[control]='requestForm?.controls[ "invoice_number" ]')

			mat-form-field.mb-10.ph-15.flex-50(
				floatLabel='always',
				appearance='outline',
				(click)='picker?.open()')
				mat-label
					| {{ "FINANCE.PROJECT.LABELS.EXPECTED_DATE" | translate }}
				span
					| {{ requestPayment?.invoice_date ? ( requestPayment?.invoice_date | momentDateFormat ) : "FINANCE.PROJECT.PLACEHOLDERS.EXPECTED_DATE" | translate }}
				input.hide(
					matInput,
					[min]="minExpectedDate",
					[matDatepicker]='picker',
					[(ngModel)]='requestPayment.invoice_date',
					[formControl]='requestForm?.controls[ "invoice_date" ]',
					ngDefaultControl,
					required,
					readonly)
				mat-datepicker-toggle(
					matSuffix,
					[for]='picker')
				mat-datepicker(
					#picker,
					[disabled]='isSubmitting || isUploading')

			mat-form-field.mb-10.ph-15.flex-100(
				*ngIf='requestPayment?.new_invoice',
				floatLabel='always',
				appearance='outline')
				mat-label
					| {{ "FINANCE.PROJECT.LABELS.INVOICE_NOTE" | translate }}
				textarea(
					matInput,
					[(ngModel)]='requestPayment.new_invoice.note',
					[placeholder]='"FINANCE.PROJECT.PLACEHOLDERS.INVOICE_NOTE" | translate',
					[formControl]='requestForm?.controls[ "invoice_note" ]',
					[disableControl]='isSubmitting || isUploading',
					ngDefaultControl)

		upload-box(
			[label]='"FINANCE.PROJECT.LABELS.INVOICE" | translate',
			[uploading]='isUploading',
			(onFileSelected)='onFileSelected( $event )')

	div(
		matDialogActions,
		align='end')
		button(
			mat-raised-button,
			type='button',
			[disabled]='isSubmitting',
			(click)='onNoClick()')
			| {{ "GENERAL.LABELS.CANCEL" | translate }}
		button(
			mat-raised-button,
			type='submit',
			color='primary',
			[disabled]='requestForm?.invalid || isSubmitting')
			.layout-row.layout-align-center-center
				.flex-auto
					ng-template([ngIf]='!isSubmitting')
						| {{ "GENERAL.LABELS.ADD" | translate }}
					ng-template([ngIf]='isSubmitting')
						| {{ "GENERAL.LABELS.PLEASE_WAIT" | translate }}
				mat-spinner.ml-5(
					*ngIf='isSubmitting',
					diameter='20')
